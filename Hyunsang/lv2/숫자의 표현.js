function solution(n) {
    let count = 0;  // 가능한 경우의 수를 저장할 변수
    let k = 1;      // 연속된 자연수의 개수를 나타내는 변수

    // (k * (k - 1)) / 2는 첫 번째 k개의 연속된 자연수의 합.
    // 이 값이 n보다 작을 때까지 반복
    while ((k * (k - 1)) / 2 < n) {
        
        // n에서 연속된 자연수의 합을 뺀 값이 k로 나누어 떨어지는지 확인
        // 즉, n에서 (k * (k - 1)) / 2를 뺀 값이 k의 배수인지 확인
        if ((n - (k * (k - 1)) / 2) % k === 0) {
            count++;  // 조건을 만족하면 count 증가
        }
        
        k++;  // k 값을 증가시켜 다음 자연수 집합을 확인
    }

    return count;  // 가능한 경우의 수 반환
}

// 시간 복잡도 : O(√n)