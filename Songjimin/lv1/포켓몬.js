function solution(nums) {
    // 1. new Set(nums) : 배열 nums의 요소를 집합(Set)으로 변환
    //    - Set 객체는 중복을 허용하지 않으므로, nums의 서로 다른 요소만 포함됩니다.
    //    - Set을 생성하는 데 O(n) 시간 복잡도가 소요됩니다.
    
    // 2. new Set(nums).size : 집합의 크기를 가져옴
    //    - Set의 size 속성은 집합의 요소 개수를 반환합니다.
    //    - size를 가져오는 데 O(1) 시간 복잡도가 소요됩니다.
    
    // 3. nums.length / 2 : 배열 길이의 절반을 계산
    //    - 배열의 길이를 가져오는 데 O(1) 시간 복잡도가 소요됩니다.
    //    - 이를 나누는 것도 O(1) 시간 복잡도가 소요됩니다.
    
    // 4. Math.min(a, b) : 두 값 a와 b 중에서 더 작은 값을 반환
    //    - 두 값을 비교하는 데 O(1) 시간 복잡도가 소요됩니다.
    
    // 전체 시간 복잡도는 O(n)입니다.
    //   - Set을 생성하는 데 O(n) 소요되고, 나머지 연산들은 O(1)입니다.
    return Math.min(new Set(nums).size, nums.length / 2);
}

/*
	전체 함수의 시간 복잡도는 O(n)입니다.
	이는 Set을 생성하는 데 걸리는 시간에 의해 결정됩니다.
	다른 연산들은 모두 상수 시간에 수행되므로
	전체적인 시간 복잡도는 O(n)으로 간주됩니다.
*/
