function solution(phone_number) {
    // 1. 전화번호의 길이에서 마지막 4자리를 제외한 부분을 전부 *로 바꿉니다.
    /* '*'.repeat(n)-> *을 n번 반복한 문자열을 만들어줌
	    즉, 마지막 4자리를 제외한 부분을 모두 *로 채움 
	    예시: "01033334444"라면 앞의 7자리는 *******으로 바뀜 */
    const masked = '*'.repeat(phone_number.length - 4);

    // 2. 전화번호의 마지막 4자리를 따로 저장합니다.
    /* slice(-4): 전화번호 문자열의 마지막 4자리를 추출
			예시: "01033334444"-> 마지막 4자리는 "4444" 됨 */
    const lastFour = phone_number.slice(-4);

    // 3. *로 가린 부분과 마지막 4자리를 합쳐서 반환합니다.
    /* 앞에서 만든 *로 가려진 부분과
	    마지막 4자리를 합쳐서 최종 결과를 반환
			결과: "*******4444" */
    return masked + lastFour;
}

/*
- 시간 복잡도 -
	1. **`repeat()`** 함수⇒ **`*O(n)*`** 시간 복잡도 가짐
		여기서 **`*n*`**은 전화번호의 길이에서 마지막 4자리를 제외한 길이
	2. **`slice()`**⇒ 문자열에서 일정 부분 잘라내는 함수로,
		이 역시 **`*O(1)*`**의 상수 시간 복잡도 로 처리됨
	따라서 이 함수의 전체 시간 복잡도 = **`*O(n)*`**
*/
